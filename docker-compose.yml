version: "2.4"
# This file helps run services so we can run integration tests.
# For testing: docker-compose up --abort-on-container-exit --exit-code-from pytest
# To see exit code: echo Exit Code is %errorlevel%
# For usage: docker-compose up -d

services:

  dynamodb:
    image: amazon/dynamodb-local:1.18.0
    ports:
      - '8000:8000'
    # Instead od using in-memory DB, we could also persist data:
    #   -sharedDb -dbPath /home/dynamodblocal/data/
    command: -jar DynamoDBLocal.jar -inMemory -port 8000
    healthcheck:
      test: ["CMD", "curl", "-s", "http://localhost:8000"]
      interval: 10s
      timeout: 10s
      retries: 30

  minio:
    image: minio/minio:RELEASE.2022-10-24T18-35-07Z.hotfix.ce525fdaf
    ports:
      - '9000:9000'
    volumes:
      - minio-data:/export
    command: server /export
    environment:
      MINIO_ACCESS_KEY: AKIAIOSFODNN7EXAMPLE
      MINIO_SECRET_KEY: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
    healthcheck:
      test: ["CMD", "curl", "-s", "http://localhost:9000"]
      interval: 10s
      timeout: 10s
      retries: 30

  createbuckets:
    image: minio/mc
    container_name: createbuckets
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >-
      /bin/sh -c "
      /usr/bin/mc config host add openEo http://minio:9000 AKIAIOSFODNN7EXAMPLE wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY --api s3v4;
      /usr/bin/mc rb --force openEo/com.sinergise.openeo.results;
      /usr/bin/mc mb openEo/com.sinergise.openeo.results;
      /usr/bin/mc policy set public openEo/com.sinergise.openeo.results;
      tail -f /dev/null;"

volumes:
  minio-data:
